

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Apr 18 12:32:21 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     008F                     	;# 
   102     0090                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0095                     	;# 
   110     0096                     	;# 
   111     0097                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009A                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     0105                     	;# 
   121     0107                     	;# 
   122     0108                     	;# 
   123     0109                     	;# 
   124     010C                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0185                     	;# 
   130     0187                     	;# 
   131     0188                     	;# 
   132     0189                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     008F                     	;# 
   180     0090                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0097                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009A                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     0105                     	;# 
   199     0107                     	;# 
   200     0108                     	;# 
   201     0109                     	;# 
   202     010C                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     010F                     	;# 
   207     0185                     	;# 
   208     0187                     	;# 
   209     0188                     	;# 
   210     0189                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213                           
   214                           	psect	stringtext
   215     0100                     __pstringtext:
   216     0100                     stringtab:
   217     0100                     __stringtab:
   218                           
   219                           ;	String table - string pointers are 2 bytes each
   220     0100  1BFF               	btfsc	btemp+1,7
   221     0101  290A               	ljmp	stringcode
   222     0102  1383               	bcf	3,7
   223     0103  187F               	btfsc	btemp+1,0
   224     0104  1783               	bsf	3,7
   225     0105  0800               	movf	0,w
   226     0106  0A84               	incf	4,f
   227     0107  1903               	skipnz
   228     0108  0AFF               	incf	btemp+1,f
   229     0109  0008               	return
   230     010A                     stringcode:
   231     010A  087F               	movf	btemp+1,w
   232     010B  397F               	andlw	127
   233     010C  008A               	movwf	10
   234     010D  0804               	movf	4,w
   235     010E  0A84               	incf	4,f
   236     010F  1903               	skipnz
   237     0110  0AFF               	incf	btemp+1,f
   238     0111  0082               	movwf	2
   239     0112                     __stringbase:
   240     0112                     __end_of__stringtab:
   241     0112                     _dpowers:
   242     0112  3401               	retlw	1
   243     0113  3400               	retlw	0
   244     0114  340A               	retlw	10
   245     0115  3400               	retlw	0
   246     0116  3464               	retlw	100
   247     0117  3400               	retlw	0
   248     0118  34E8               	retlw	232
   249     0119  3403               	retlw	3
   250     011A  3410               	retlw	16
   251     011B  3427               	retlw	39
   252     011C                     __end_of_dpowers:
   253     011C                     _menu:
   254     011C  342D               	retlw	45
   255     011D  342D               	retlw	45
   256     011E  342D               	retlw	45
   257     011F  342D               	retlw	45
   258     0120  342D               	retlw	45
   259     0121  342D               	retlw	45
   260     0122  342D               	retlw	45
   261     0123  342D               	retlw	45
   262     0124  342D               	retlw	45
   263     0125  342D               	retlw	45
   264     0126  342D               	retlw	45
   265     0127  342D               	retlw	45
   266     0128  342D               	retlw	45
   267     0129  342D               	retlw	45
   268     012A  342D               	retlw	45
   269     012B  342D               	retlw	45
   270     012C  342D               	retlw	45
   271     012D  342D               	retlw	45
   272     012E  342D               	retlw	45
   273     012F  342D               	retlw	45
   274     0130  342D               	retlw	45
   275     0131  342D               	retlw	45
   276     0132  342D               	retlw	45
   277     0133  342D               	retlw	45
   278     0134  342D               	retlw	45
   279     0135  342D               	retlw	45
   280     0136  342D               	retlw	45
   281     0137  342D               	retlw	45
   282     0138  342D               	retlw	45
   283     0139  3420               	retlw	32
   284     013A  344D               	retlw	77
   285     013B  3445               	retlw	69
   286     013C  344E               	retlw	78
   287     013D  34DA               	retlw	218
   288     013E  3420               	retlw	32
   289     013F  342D               	retlw	45
   290     0140  342D               	retlw	45
   291     0141  342D               	retlw	45
   292     0142  342D               	retlw	45
   293     0143  342D               	retlw	45
   294     0144  342D               	retlw	45
   295     0145  342D               	retlw	45
   296     0146  342D               	retlw	45
   297     0147  342D               	retlw	45
   298     0148  342D               	retlw	45
   299     0149  342D               	retlw	45
   300     014A  342D               	retlw	45
   301     014B  342D               	retlw	45
   302     014C  342D               	retlw	45
   303     014D  342D               	retlw	45
   304     014E  342D               	retlw	45
   305     014F  342D               	retlw	45
   306     0150  342D               	retlw	45
   307     0151  342D               	retlw	45
   308     0152  342D               	retlw	45
   309     0153  342D               	retlw	45
   310     0154  342D               	retlw	45
   311     0155  342D               	retlw	45
   312     0156  342D               	retlw	45
   313     0157  342D               	retlw	45
   314     0158  342D               	retlw	45
   315     0159  342D               	retlw	45
   316     015A  342D               	retlw	45
   317     015B  342D               	retlw	45
   318     015C  3420               	retlw	32
   319     015D  340A               	retlw	10
   320     015E  340D               	retlw	13
   321     015F  3400               	retlw	0
   322     0160                     __end_of_menu:
   323     0160                     _data1:
   324     0160  3444               	retlw	68
   325     0161  3469               	retlw	105
   326     0162  3467               	retlw	103
   327     0163  3469               	retlw	105
   328     0164  3474               	retlw	116
   329     0165  3465               	retlw	101
   330     0166  3420               	retlw	32
   331     0167  3465               	retlw	101
   332     0168  346E               	retlw	110
   333     0169  3420               	retlw	32
   334     016A  3473               	retlw	115
   335     016B  3475               	retlw	117
   336     016C  3420               	retlw	32
   337     016D  3474               	retlw	116
   338     016E  3465               	retlw	101
   339     016F  3463               	retlw	99
   340     0170  346C               	retlw	108
   341     0171  3461               	retlw	97
   342     0172  3464               	retlw	100
   343     0173  346F               	retlw	111
   344     0174  3420               	retlw	32
   345     0175  3465               	retlw	101
   346     0176  346C               	retlw	108
   347     0177  3420               	retlw	32
   348     0178  346E               	retlw	110
   349     0179  34FA               	retlw	250
   350     017A  346D               	retlw	109
   351     017B  3465               	retlw	101
   352     017C  3472               	retlw	114
   353     017D  346F               	retlw	111
   354     017E  3420               	retlw	32
   355     017F  3464               	retlw	100
   356     0180  3465               	retlw	101
   357     0181  3420               	retlw	32
   358     0182  346C               	retlw	108
   359     0183  3461               	retlw	97
   360     0184  3420               	retlw	32
   361     0185  3461               	retlw	97
   362     0186  3463               	retlw	99
   363     0187  3463               	retlw	99
   364     0188  3469               	retlw	105
   365     0189  34F3               	retlw	243
   366     018A  346E               	retlw	110
   367     018B  3420               	retlw	32
   368     018C  3471               	retlw	113
   369     018D  3475               	retlw	117
   370     018E  3465               	retlw	101
   371     018F  3420               	retlw	32
   372     0190  3464               	retlw	100
   373     0191  3465               	retlw	101
   374     0192  3473               	retlw	115
   375     0193  3465               	retlw	101
   376     0194  3461               	retlw	97
   377     0195  3420               	retlw	32
   378     0196  3472               	retlw	114
   379     0197  3465               	retlw	101
   380     0198  3461               	retlw	97
   381     0199  346C               	retlw	108
   382     019A  3469               	retlw	105
   383     019B  347A               	retlw	122
   384     019C  3461               	retlw	97
   385     019D  3472               	retlw	114
   386     019E  3420               	retlw	32
   387     019F  340A               	retlw	10
   388     01A0  340D               	retlw	13
   389     01A1  3400               	retlw	0
   390     01A2                     __end_of_data1:
   391     01A2                     _data5:
   392     01A2  344F               	retlw	79
   393     01A3  3470               	retlw	112
   394     01A4  3463               	retlw	99
   395     01A5  3469               	retlw	105
   396     01A6  34F3               	retlw	243
   397     01A7  346E               	retlw	110
   398     01A8  3420               	retlw	32
   399     01A9  346E               	retlw	110
   400     01AA  346F               	retlw	111
   401     01AB  3420               	retlw	32
   402     01AC  3476               	retlw	118
   403     01AD  34E1               	retlw	225
   404     01AE  346C               	retlw	108
   405     01AF  3469               	retlw	105
   406     01B0  3464               	retlw	100
   407     01B1  3461               	retlw	97
   408     01B2  342E               	retlw	46
   409     01B3  3420               	retlw	32
   410     01B4  3445               	retlw	69
   411     01B5  346C               	retlw	108
   412     01B6  3469               	retlw	105
   413     01B7  3467               	retlw	103
   414     01B8  3461               	retlw	97
   415     01B9  3420               	retlw	32
   416     01BA  3475               	retlw	117
   417     01BB  346E               	retlw	110
   418     01BC  3420               	retlw	32
   419     01BD  3476               	retlw	118
   420     01BE  3461               	retlw	97
   421     01BF  346C               	retlw	108
   422     01C0  346F               	retlw	111
   423     01C1  3472               	retlw	114
   424     01C2  3420               	retlw	32
   425     01C3  3465               	retlw	101
   426     01C4  346E               	retlw	110
   427     01C5  3474               	retlw	116
   428     01C6  3472               	retlw	114
   429     01C7  3465               	retlw	101
   430     01C8  3420               	retlw	32
   431     01C9  3431               	retlw	49
   432     01CA  3420               	retlw	32
   433     01CB  3479               	retlw	121
   434     01CC  3420               	retlw	32
   435     01CD  3432               	retlw	50
   436     01CE  3420               	retlw	32
   437     01CF  340A               	retlw	10
   438     01D0  340D               	retlw	13
   439     01D1  3400               	retlw	0
   440     01D2                     __end_of_data5:
   441     01D2                     _data6:
   442     01D2  3445               	retlw	69
   443     01D3  346C               	retlw	108
   444     01D4  3420               	retlw	32
   445     01D5  3476               	retlw	118
   446     01D6  3461               	retlw	97
   447     01D7  346C               	retlw	108
   448     01D8  346F               	retlw	111
   449     01D9  3472               	retlw	114
   450     01DA  3420               	retlw	32
   451     01DB  3464               	retlw	100
   452     01DC  3465               	retlw	101
   453     01DD  346C               	retlw	108
   454     01DE  3420               	retlw	32
   455     01DF  3470               	retlw	112
   456     01E0  346F               	retlw	111
   457     01E1  3474               	retlw	116
   458     01E2  3465               	retlw	101
   459     01E3  346E               	retlw	110
   460     01E4  3463               	retlw	99
   461     01E5  3469               	retlw	105
   462     01E6  34F3               	retlw	243
   463     01E7  346D               	retlw	109
   464     01E8  3465               	retlw	101
   465     01E9  3474               	retlw	116
   466     01EA  3472               	retlw	114
   467     01EB  346F               	retlw	111
   468     01EC  3420               	retlw	32
   469     01ED  3465               	retlw	101
   470     01EE  3473               	retlw	115
   471     01EF  343A               	retlw	58
   472     01F0  3420               	retlw	32
   473     01F1  3400               	retlw	0
   474     01F2                     __end_of_data6:
   475     01F2                     _data2:
   476     01F2  3431               	retlw	49
   477     01F3  342E               	retlw	46
   478     01F4  3420               	retlw	32
   479     01F5  344C               	retlw	76
   480     01F6  3465               	retlw	101
   481     01F7  3465               	retlw	101
   482     01F8  3472               	retlw	114
   483     01F9  3420               	retlw	32
   484     01FA  3465               	retlw	101
   485     01FB  346C               	retlw	108
   486     01FC  3420               	retlw	32
   487     01FD  3470               	retlw	112
   488     01FE  346F               	retlw	111
   489     01FF  3474               	retlw	116
   490     0200  3465               	retlw	101
   491     0201  346E               	retlw	110
   492     0202  3463               	retlw	99
   493     0203  3469               	retlw	105
   494     0204  34F3               	retlw	243
   495     0205  346D               	retlw	109
   496     0206  3465               	retlw	101
   497     0207  3474               	retlw	116
   498     0208  3472               	retlw	114
   499     0209  346F               	retlw	111
   500     020A  3420               	retlw	32
   501     020B  340A               	retlw	10
   502     020C  340D               	retlw	13
   503     020D  3400               	retlw	0
   504     020E                     __end_of_data2:
   505     020E                     _data4:
   506     020E  3449               	retlw	73
   507     020F  346E               	retlw	110
   508     0210  3467               	retlw	103
   509     0211  3472               	retlw	114
   510     0212  3465               	retlw	101
   511     0213  3473               	retlw	115
   512     0214  3465               	retlw	101
   513     0215  3420               	retlw	32
   514     0216  3475               	retlw	117
   515     0217  346E               	retlw	110
   516     0218  3461               	retlw	97
   517     0219  3420               	retlw	32
   518     021A  346F               	retlw	111
   519     021B  3470               	retlw	112
   520     021C  3463               	retlw	99
   521     021D  3469               	retlw	105
   522     021E  34F3               	retlw	243
   523     021F  346E               	retlw	110
   524     0220  343A               	retlw	58
   525     0221  3420               	retlw	32
   526     0222  3420               	retlw	32
   527     0223  3420               	retlw	32
   528     0224  3400               	retlw	0
   529     0225                     __end_of_data4:
   530     0225                     _data3:
   531     0225  3432               	retlw	50
   532     0226  342E               	retlw	46
   533     0227  3420               	retlw	32
   534     0228  3445               	retlw	69
   535     0229  346E               	retlw	110
   536     022A  3476               	retlw	118
   537     022B  3469               	retlw	105
   538     022C  3461               	retlw	97
   539     022D  3472               	retlw	114
   540     022E  3420               	retlw	32
   541     022F  3441               	retlw	65
   542     0230  3453               	retlw	83
   543     0231  3443               	retlw	67
   544     0232  3449               	retlw	73
   545     0233  3449               	retlw	73
   546     0234  3420               	retlw	32
   547     0235  340A               	retlw	10
   548     0236  340D               	retlw	13
   549     0237  3400               	retlw	0
   550     0238                     __end_of_data3:
   551     0238                     _data:
   552     0238  3443               	retlw	67
   553     0239  3461               	retlw	97
   554     023A  3472               	retlw	114
   555     023B  3470               	retlw	112
   556     023C  3465               	retlw	101
   557     023D  3420               	retlw	32
   558     023E  3444               	retlw	68
   559     023F  3469               	retlw	105
   560     0240  3465               	retlw	101
   561     0241  346D               	retlw	109
   562     0242  3420               	retlw	32
   563     0243  340A               	retlw	10
   564     0244  340D               	retlw	13
   565     0245  3400               	retlw	0
   566     0246                     __end_of_data:
   567     0246                     _num2:
   568     0246  3432               	retlw	50
   569     0247  3420               	retlw	32
   570     0248  340A               	retlw	10
   571     0249  340D               	retlw	13
   572     024A  3400               	retlw	0
   573     024B                     __end_of_num2:
   574     024B                     _num1:
   575     024B  3431               	retlw	49
   576     024C  3420               	retlw	32
   577     024D  340A               	retlw	10
   578     024E  340D               	retlw	13
   579     024F  3400               	retlw	0
   580     0250                     __end_of_num1:
   581     0250                     _data7:
   582     0250  340A               	retlw	10
   583     0251  340D               	retlw	13
   584     0252  3400               	retlw	0
   585     0253                     __end_of_data7:
   586     0019                     _TXREG	set	25
   587     000B                     _INTCONbits	set	11
   588     0018                     _RCSTAbits	set	24
   589     0006                     _PORTB	set	6
   590     001E                     _ADRESH	set	30
   591     001F                     _ADCON0bits	set	31
   592     001A                     _RCREG	set	26
   593     0008                     _PORTD	set	8
   594     000C                     _PIR1bits	set	12
   595     0066                     _ADIF	set	102
   596     009F                     _ADCON1bits	set	159
   597     0085                     _TRISAbits	set	133
   598     008C                     _PIE1bits	set	140
   599     009A                     _SPBRGH	set	154
   600     0099                     _SPBRG	set	153
   601     0098                     _TXSTAbits	set	152
   602     008F                     _OSCCONbits	set	143
   603     0088                     _TRISD	set	136
   604     0086                     _TRISB	set	134
   605     0188                     _ANSELbits	set	392
   606     0187                     _BAUDCTLbits	set	391
   607     0189                     _ANSELH	set	393
   608     0188                     _ANSEL	set	392
   609     0253                     STR_1:
   610     0253  3425               	retlw	37	;'%'
   611     0254  3464               	retlw	100	;'d'
   612     0255  3400               	retlw	0
   613                           
   614                           	psect	cinit
   615     000F                     start_initialization:	
   616                           ; #config settings
   617                           
   618     000F                     __initialization:
   619                           
   620                           ; Clear objects allocated to BANK0
   621     000F  1283               	bcf	3,5	;RP0=0, select bank0
   622     0010  1303               	bcf	3,6	;RP1=0, select bank0
   623     0011  01BB               	clrf	__pbssBANK0& (0+127)
   624     0012  01BC               	clrf	(__pbssBANK0+1)& (0+127)
   625     0013  01BD               	clrf	(__pbssBANK0+2)& (0+127)
   626     0014                     end_of_initialization:	
   627                           ;End of C runtime variable initialization code
   628                           
   629     0014                     __end_of__initialization:
   630     0014  0183               	clrf	3
   631     0015  120A  118A  2B46   	ljmp	_main	;jump to C main() function
   632                           
   633                           	psect	bssBANK0
   634     003B                     __pbssBANK0:
   635     003B                     _ans:
   636     003B                     	ds	2
   637     003D                     _pot:
   638     003D                     	ds	1
   639                           
   640                           	psect	cstackCOMMON
   641     0070                     __pcstackCOMMON:
   642     0070                     ?_setup:
   643     0070                     ?_isr:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ??_isr:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?_main:	
   650                           ; 1 bytes @ 0x0
   651                           
   652                           
   653                           ; 1 bytes @ 0x0
   654     0070                     	ds	4
   655     0074                     ??_setup:
   656     0074                     ?_strlen:	
   657                           ; 1 bytes @ 0x4
   658                           
   659     0074                     ?___lwdiv:	
   660                           ; 2 bytes @ 0x4
   661                           
   662     0074                     ___lwdiv@divisor:	
   663                           ; 2 bytes @ 0x4
   664                           
   665     0074                     strlen@s:	
   666                           ; 2 bytes @ 0x4
   667                           
   668                           
   669                           ; 2 bytes @ 0x4
   670     0074                     	ds	2
   671     0076                     ??_strlen:
   672     0076                     ___lwdiv@dividend:	
   673                           ; 1 bytes @ 0x6
   674                           
   675     0076                     strlen@cp:	
   676                           ; 2 bytes @ 0x6
   677                           
   678                           
   679                           ; 2 bytes @ 0x6
   680     0076                     	ds	2
   681     0078                     ?_print_string:
   682     0078                     ??___lwdiv:	
   683                           ; 1 bytes @ 0x8
   684                           
   685     0078                     print_string@cadena:	
   686                           ; 1 bytes @ 0x8
   687                           
   688                           
   689                           ; 2 bytes @ 0x8
   690     0078                     	ds	1
   691     0079                     ??___lwmod:
   692                           
   693                           ; 1 bytes @ 0x9
   694     0079                     	ds	1
   695                           
   696                           	psect	cstackBANK0
   697     0020                     __pcstackBANK0:
   698     0020                     ??_print_string:
   699     0020                     ___lwdiv@quotient:	
   700                           ; 1 bytes @ 0x0
   701                           
   702                           
   703                           ; 2 bytes @ 0x0
   704     0020                     	ds	2
   705     0022                     ___lwdiv@counter:
   706                           
   707                           ; 1 bytes @ 0x2
   708     0022                     	ds	1
   709     0023                     ?___lwmod:
   710     0023                     print_string@largo:	
   711                           ; 2 bytes @ 0x3
   712                           
   713     0023                     ___lwmod@divisor:	
   714                           ; 2 bytes @ 0x3
   715                           
   716                           
   717                           ; 2 bytes @ 0x3
   718     0023                     	ds	2
   719     0025                     print_string@i:
   720     0025                     ___lwmod@dividend:	
   721                           ; 2 bytes @ 0x5
   722                           
   723                           
   724                           ; 2 bytes @ 0x5
   725     0025                     	ds	2
   726     0027                     ___lwmod@counter:
   727                           
   728                           ; 1 bytes @ 0x7
   729     0027                     	ds	1
   730     0028                     ?_sprintf:
   731     0028                     sprintf@f:	
   732                           ; 2 bytes @ 0x8
   733                           
   734                           
   735                           ; 2 bytes @ 0x8
   736     0028                     	ds	4
   737     002C                     ??_sprintf:
   738                           
   739                           ; 1 bytes @ 0xC
   740     002C                     	ds	4
   741     0030                     sprintf@ap:
   742                           
   743                           ; 1 bytes @ 0x10
   744     0030                     	ds	1
   745     0031                     sprintf@flag:
   746                           
   747                           ; 1 bytes @ 0x11
   748     0031                     	ds	1
   749     0032                     sprintf@prec:
   750                           
   751                           ; 1 bytes @ 0x12
   752     0032                     	ds	1
   753     0033                     sprintf@val:
   754                           
   755                           ; 2 bytes @ 0x13
   756     0033                     	ds	2
   757     0035                     sprintf@sp:
   758                           
   759                           ; 1 bytes @ 0x15
   760     0035                     	ds	1
   761     0036                     sprintf@c:
   762                           
   763                           ; 1 bytes @ 0x16
   764     0036                     	ds	1
   765     0037                     ??_main:
   766                           
   767                           ; 1 bytes @ 0x17
   768     0037                     	ds	2
   769     0039                     main@adc_value_1:
   770                           
   771                           ; 2 bytes @ 0x19
   772     0039                     	ds	2
   773                           
   774                           	psect	maintext
   775     0346                     __pmaintext:	
   776 ;;
   777 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   778 ;;
   779 ;; *************** function _main *****************
   780 ;; Defined at:
   781 ;;		line 72 in file "mainPostLab8.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  adc_value_1     2   25[BANK0 ] int 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : B00/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   795 ;;      Params:         0       0       0       0       0
   796 ;;      Locals:         0       2       0       0       0
   797 ;;      Temps:          0       2       0       0       0
   798 ;;      Totals:         0       4       0       0       0
   799 ;;Total ram usage:        4 bytes
   800 ;; Hardware stack levels required when called: 4
   801 ;; This function calls:
   802 ;;		_print_string
   803 ;;		_setup
   804 ;;		_sprintf
   805 ;; This function is called by:
   806 ;;		Startup code after reset
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810     0346                     _main:	
   811                           ;psect for function _main
   812                           
   813     0346                     l1187:	
   814                           ;incstack = 0
   815                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   816                           
   817                           
   818                           ;mainPostLab8.c: 73:     setup();
   819     0346  120A  118A  2475  120A  118A  	fcall	_setup
   820     034B                     l1189:
   821                           
   822                           ;mainPostLab8.c: 74:     print_string(menu);
   823     034B  301C               	movlw	low (_menu| (0+32768))
   824     034C  00F8               	movwf	print_string@cadena
   825     034D  3081               	movlw	high (_menu| (0+32768))
   826     034E  00F9               	movwf	print_string@cadena+1
   827     034F  120A  118A  2419  120A  118A  	fcall	_print_string
   828     0354                     l1191:
   829                           
   830                           ;mainPostLab8.c: 75:     print_string(data1);
   831     0354  3060               	movlw	low (_data1| (0+32768))
   832     0355  00F8               	movwf	print_string@cadena
   833     0356  3081               	movlw	high (_data1| (0+32768))
   834     0357  00F9               	movwf	print_string@cadena+1
   835     0358  120A  118A  2419  120A  118A  	fcall	_print_string
   836     035D                     l1193:
   837                           
   838                           ;mainPostLab8.c: 76:     print_string(data2);
   839     035D  30F2               	movlw	low (_data2| (0+32768))
   840     035E  00F8               	movwf	print_string@cadena
   841     035F  3081               	movlw	high (_data2| (0+32768))
   842     0360  00F9               	movwf	print_string@cadena+1
   843     0361  120A  118A  2419  120A  118A  	fcall	_print_string
   844     0366                     l1195:
   845                           
   846                           ;mainPostLab8.c: 77:     print_string(data3);
   847     0366  3025               	movlw	low (_data3| (0+32768))
   848     0367  00F8               	movwf	print_string@cadena
   849     0368  3082               	movlw	high (_data3| (0+32768))
   850     0369  00F9               	movwf	print_string@cadena+1
   851     036A  120A  118A  2419  120A  118A  	fcall	_print_string
   852     036F                     l1197:
   853                           
   854                           ;mainPostLab8.c: 78:     print_string(data4);
   855     036F  300E               	movlw	low (_data4| (0+32768))
   856     0370  00F8               	movwf	print_string@cadena
   857     0371  3082               	movlw	high (_data4| (0+32768))
   858     0372  00F9               	movwf	print_string@cadena+1
   859     0373  120A  118A  2419  120A  118A  	fcall	_print_string
   860     0378                     l1199:	
   861                           ;mainPostLab8.c: 80:     while(ans == 0);
   862                           
   863     0378  1283               	bcf	3,5	;RP0=0, select bank0
   864     0379  1303               	bcf	3,6	;RP1=0, select bank0
   865     037A  083B               	movf	_ans,w
   866     037B  043C               	iorwf	_ans+1,w
   867     037C  1903               	btfsc	3,2
   868     037D  2B7F               	goto	u551
   869     037E  2B80               	goto	u550
   870     037F                     u551:
   871     037F  2B78               	goto	l1199
   872     0380                     u550:
   873     0380                     l1201:
   874                           
   875                           ;mainPostLab8.c: 82:     if (ans == 49){
   876     0380  3031               	movlw	49
   877     0381  063B               	xorwf	_ans,w
   878     0382  043C               	iorwf	_ans+1,w
   879     0383  1D03               	btfss	3,2
   880     0384  2B86               	goto	u561
   881     0385  2B87               	goto	u560
   882     0386                     u561:
   883     0386  2BE1               	goto	l1221
   884     0387                     u560:
   885     0387                     l1203:
   886                           
   887                           ;mainPostLab8.c: 83:         print_string(num1);
   888     0387  304B               	movlw	low (_num1| (0+32768))
   889     0388  00F8               	movwf	print_string@cadena
   890     0389  3082               	movlw	high (_num1| (0+32768))
   891     038A  00F9               	movwf	print_string@cadena+1
   892     038B  120A  118A  2419  120A  118A  	fcall	_print_string
   893     0390                     l1205:
   894                           
   895                           ;mainPostLab8.c: 84:         ADCON0bits.CHS = 0;
   896     0390  30C3               	movlw	-61
   897     0391  1283               	bcf	3,5	;RP0=0, select bank0
   898     0392  1303               	bcf	3,6	;RP1=0, select bank0
   899     0393  059F               	andwf	31,f	;volatile
   900     0394                     l1207:
   901                           
   902                           ;mainPostLab8.c: 85:         ADCON0bits.GO = 1;
   903     0394  149F               	bsf	31,1	;volatile
   904     0395                     l97:	
   905                           ;mainPostLab8.c: 86:         while(ADCON0bits.GO);
   906                           
   907     0395  189F               	btfsc	31,1	;volatile
   908     0396  2B98               	goto	u571
   909     0397  2B99               	goto	u570
   910     0398                     u571:
   911     0398  2B95               	goto	l97
   912     0399                     u570:
   913     0399                     l1209:
   914                           
   915                           ;mainPostLab8.c: 87:         int adc_value_1 = ADRESH;
   916     0399  081E               	movf	30,w	;volatile
   917     039A  00B7               	movwf	??_main
   918     039B  01B8               	clrf	??_main+1
   919     039C  0837               	movf	??_main,w
   920     039D  00B9               	movwf	main@adc_value_1
   921     039E  0838               	movf	??_main+1,w
   922     039F  00BA               	movwf	main@adc_value_1+1
   923                           
   924                           ;mainPostLab8.c: 88:         PORTB = (char) adc_value_1;
   925     03A0  0839               	movf	main@adc_value_1,w
   926     03A1  0086               	movwf	6	;volatile
   927                           
   928                           ;mainPostLab8.c: 89:         _delay((unsigned long)((10)*(1000000/4000.0)));
   929     03A2  3004               	movlw	4
   930     03A3  1283               	bcf	3,5	;RP0=0, select bank0
   931     03A4  1303               	bcf	3,6	;RP1=0, select bank0
   932     03A5  00B8               	movwf	??_main+1
   933     03A6  303D               	movlw	61
   934     03A7  00B7               	movwf	??_main
   935     03A8                     u597:
   936     03A8  0BB7               	decfsz	??_main,f
   937     03A9  2BA8               	goto	u597
   938     03AA  0BB8               	decfsz	??_main+1,f
   939     03AB  2BA8               	goto	u597
   940     03AC                     l1211:
   941                           
   942                           ;mainPostLab8.c: 91:         sprintf(pot, "%d", adc_value_1);
   943     03AC  3053               	movlw	low (STR_1| (0+32768))
   944     03AD  1283               	bcf	3,5	;RP0=0, select bank0
   945     03AE  1303               	bcf	3,6	;RP1=0, select bank0
   946     03AF  00A8               	movwf	sprintf@f
   947     03B0  3082               	movlw	high (STR_1| (0+32768))
   948     03B1  00A9               	movwf	sprintf@f+1
   949     03B2  083A               	movf	main@adc_value_1+1,w
   950     03B3  00AB               	movwf	?_sprintf+3
   951     03B4  0839               	movf	main@adc_value_1,w
   952     03B5  00AA               	movwf	?_sprintf+2
   953     03B6  303D               	movlw	(low (_pot| 0))& (0+255)
   954     03B7  120A  118A  2256  120A  118A  	fcall	_sprintf
   955     03BC                     l1213:
   956                           
   957                           ;mainPostLab8.c: 92:         print_string(data6);
   958     03BC  30D2               	movlw	low (_data6| (0+32768))
   959     03BD  00F8               	movwf	print_string@cadena
   960     03BE  3081               	movlw	high (_data6| (0+32768))
   961     03BF  00F9               	movwf	print_string@cadena+1
   962     03C0  120A  118A  2419  120A  118A  	fcall	_print_string
   963     03C5                     l1215:
   964                           
   965                           ;mainPostLab8.c: 93:         print_string(pot);
   966     03C5  303D               	movlw	(low (_pot| 0))& (0+255)
   967     03C6  00F8               	movwf	print_string@cadena
   968     03C7  3000               	movlw	0
   969     03C8  00F9               	movwf	print_string@cadena+1
   970     03C9  120A  118A  2419  120A  118A  	fcall	_print_string
   971     03CE                     l1217:
   972                           
   973                           ;mainPostLab8.c: 94:         print_string(data7);
   974     03CE  3050               	movlw	low (_data7| (0+32768))
   975     03CF  00F8               	movwf	print_string@cadena
   976     03D0  3082               	movlw	high (_data7| (0+32768))
   977     03D1  00F9               	movwf	print_string@cadena+1
   978     03D2  120A  118A  2419  120A  118A  	fcall	_print_string
   979     03D7                     l1219:
   980                           
   981                           ;mainPostLab8.c: 95:         print_string(data7);
   982     03D7  3050               	movlw	low (_data7| (0+32768))
   983     03D8  00F8               	movwf	print_string@cadena
   984     03D9  3082               	movlw	high (_data7| (0+32768))
   985     03DA  00F9               	movwf	print_string@cadena+1
   986     03DB  120A  118A  2419  120A  118A  	fcall	_print_string
   987                           
   988                           ;mainPostLab8.c: 96:     }
   989     03E0  2C16               	goto	l103
   990     03E1                     l1221:
   991     03E1  3032               	movlw	50
   992     03E2  063B               	xorwf	_ans,w
   993     03E3  043C               	iorwf	_ans+1,w
   994     03E4  1D03               	btfss	3,2
   995     03E5  2BE7               	goto	u581
   996     03E6  2BE8               	goto	u580
   997     03E7                     u581:
   998     03E7  2C04               	goto	l1225
   999     03E8                     u580:
  1000     03E8                     l1223:
  1001                           
  1002                           ;mainPostLab8.c: 98:         print_string(num2);
  1003     03E8  3046               	movlw	low (_num2| (0+32768))
  1004     03E9  00F8               	movwf	print_string@cadena
  1005     03EA  3082               	movlw	high (_num2| (0+32768))
  1006     03EB  00F9               	movwf	print_string@cadena+1
  1007     03EC  120A  118A  2419  120A  118A  	fcall	_print_string
  1008                           
  1009                           ;mainPostLab8.c: 99:         print_string(data);
  1010     03F1  3038               	movlw	low (_data| (0+32768))
  1011     03F2  00F8               	movwf	print_string@cadena
  1012     03F3  3082               	movlw	high (_data| (0+32768))
  1013     03F4  00F9               	movwf	print_string@cadena+1
  1014     03F5  120A  118A  2419  120A  118A  	fcall	_print_string
  1015                           
  1016                           ;mainPostLab8.c: 100:         print_string(data7);
  1017     03FA  3050               	movlw	low (_data7| (0+32768))
  1018     03FB  00F8               	movwf	print_string@cadena
  1019     03FC  3082               	movlw	high (_data7| (0+32768))
  1020     03FD  00F9               	movwf	print_string@cadena+1
  1021     03FE  120A  118A  2419  120A  118A  	fcall	_print_string
  1022                           
  1023                           ;mainPostLab8.c: 101:     }
  1024     0403  2C16               	goto	l103
  1025     0404                     l1225:
  1026                           
  1027                           ;mainPostLab8.c: 103:         print_string(data5);
  1028     0404  30A2               	movlw	low (_data5| (0+32768))
  1029     0405  00F8               	movwf	print_string@cadena
  1030     0406  3081               	movlw	high (_data5| (0+32768))
  1031     0407  00F9               	movwf	print_string@cadena+1
  1032     0408  120A  118A  2419  120A  118A  	fcall	_print_string
  1033                           
  1034                           ;mainPostLab8.c: 104:         print_string(data7);
  1035     040D  3050               	movlw	low (_data7| (0+32768))
  1036     040E  00F8               	movwf	print_string@cadena
  1037     040F  3082               	movlw	high (_data7| (0+32768))
  1038     0410  00F9               	movwf	print_string@cadena+1
  1039     0411  120A  118A  2419  120A  118A  	fcall	_print_string
  1040     0416                     l103:
  1041     0416  120A  118A  280C   	ljmp	start
  1042     0419                     __end_of_main:
  1043                           
  1044                           	psect	text1
  1045     0256                     __ptext1:	
  1046 ;; *************** function _sprintf *****************
  1047 ;; Defined at:
  1048 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  sp              1    wreg     PTR unsigned char 
  1051 ;;		 -> pot(1), 
  1052 ;;  f               2    8[BANK0 ] PTR const unsigned char 
  1053 ;;		 -> STR_1(3), 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  1056 ;;		 -> pot(1), 
  1057 ;;  tmpval          4    0        struct .
  1058 ;;  val             2   19[BANK0 ] unsigned int 
  1059 ;;  cp              2    0        PTR const unsigned char 
  1060 ;;  len             2    0        unsigned int 
  1061 ;;  c               1   22[BANK0 ] unsigned char 
  1062 ;;  prec            1   18[BANK0 ] char 
  1063 ;;  flag            1   17[BANK0 ] unsigned char 
  1064 ;;  ap              1   16[BANK0 ] PTR void [1]
  1065 ;;		 -> ?_sprintf(2), 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  2    8[BANK0 ] int 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         0       4       0       0       0
  1076 ;;      Locals:         0       7       0       0       0
  1077 ;;      Temps:          0       4       0       0       0
  1078 ;;      Totals:         0      15       0       0       0
  1079 ;;Total ram usage:       15 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; Hardware stack levels required when called: 2
  1082 ;; This function calls:
  1083 ;;		___lwdiv
  1084 ;;		___lwmod
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090     0256                     _sprintf:	
  1091                           ;psect for function _sprintf
  1092                           
  1093                           
  1094                           ;incstack = 0
  1095                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1096                           ;sprintf@sp stored from wreg
  1097     0256  1283               	bcf	3,5	;RP0=0, select bank0
  1098     0257  1303               	bcf	3,6	;RP1=0, select bank0
  1099     0258  00B5               	movwf	sprintf@sp
  1100     0259                     l1121:
  1101                           
  1102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1103     0259  302A               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1104     025A  00B0               	movwf	sprintf@ap
  1105                           
  1106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1107     025B  2B2B               	goto	l1173
  1108     025C                     l1123:
  1109                           
  1110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1111     025C  3025               	movlw	37
  1112     025D  0636               	xorwf	sprintf@c,w
  1113     025E  1903               	btfsc	3,2
  1114     025F  2A61               	goto	u471
  1115     0260  2A62               	goto	u470
  1116     0261                     u471:
  1117     0261  2A6C               	goto	l1129
  1118     0262                     u470:
  1119     0262                     l1125:
  1120                           
  1121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1122     0262  0835               	movf	sprintf@sp,w
  1123     0263  0084               	movwf	4
  1124     0264  0836               	movf	sprintf@c,w
  1125     0265  1383               	bcf	3,7	;select IRP bank0
  1126     0266  0080               	movwf	0
  1127     0267                     l1127:
  1128     0267  3001               	movlw	1
  1129     0268  00AC               	movwf	??_sprintf
  1130     0269  082C               	movf	??_sprintf,w
  1131     026A  07B5               	addwf	sprintf@sp,f
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1134     026B  2B2B               	goto	l1173
  1135     026C                     l1129:
  1136                           
  1137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1138     026C  01B1               	clrf	sprintf@flag
  1139     026D                     l1133:	
  1140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1141                           
  1142     026D  0829               	movf	sprintf@f+1,w
  1143     026E  00AD               	movwf	??_sprintf+1
  1144     026F  0828               	movf	sprintf@f,w
  1145     0270  00AC               	movwf	??_sprintf
  1146     0271  0AA8               	incf	sprintf@f,f
  1147     0272  1903               	skipnz
  1148     0273  0AA9               	incf	sprintf@f+1,f
  1149     0274  082D               	movf	??_sprintf+1,w
  1150     0275  00FF               	movwf	btemp+1
  1151     0276  082C               	movf	??_sprintf,w
  1152     0277  0084               	movwf	4
  1153     0278  120A  118A  2100  120A  118A  	fcall	stringtab
  1154     027D  00B6               	movwf	sprintf@c
  1155     027E  00AE               	movwf	??_sprintf+2
  1156     027F  01AF               	clrf	??_sprintf+3
  1157                           
  1158                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1159                           ; Switch size 1, requested type "simple"
  1160                           ; Number of cases is 1, Range of values is 0 to 0
  1161                           ; switch strategies available:
  1162                           ; Name         Instructions Cycles
  1163                           ; simple_byte            4     3 (average)
  1164                           ; direct_byte           11     8 (fixed)
  1165                           ; jumptable            260     6 (fixed)
  1166                           ;	Chosen strategy is simple_byte
  1167     0280  082F               	movf	??_sprintf+3,w
  1168     0281  3A00               	xorlw	0	; case 0
  1169     0282  1903               	skipnz
  1170     0283  2A85               	goto	l1247
  1171     0284  2B2B               	goto	l1173
  1172     0285                     l1247:
  1173                           
  1174                           ; Switch size 1, requested type "simple"
  1175                           ; Number of cases is 3, Range of values is 0 to 105
  1176                           ; switch strategies available:
  1177                           ; Name         Instructions Cycles
  1178                           ; simple_byte           10     6 (average)
  1179                           ; jumptable            260     6 (fixed)
  1180                           ;	Chosen strategy is simple_byte
  1181     0285  082E               	movf	??_sprintf+2,w
  1182     0286  3A00               	xorlw	0	; case 0
  1183     0287  1903               	skipnz
  1184     0288  2B41               	goto	l1175
  1185     0289  3A64               	xorlw	100	; case 100
  1186     028A  1903               	skipnz
  1187     028B  2A90               	goto	l1135
  1188     028C  3A0D               	xorlw	13	; case 105
  1189     028D  1903               	skipnz
  1190     028E  2A90               	goto	l1135
  1191     028F  2B2B               	goto	l1173
  1192     0290                     l1135:
  1193                           
  1194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1195     0290  0830               	movf	sprintf@ap,w
  1196     0291  0084               	movwf	4
  1197     0292  1383               	bcf	3,7	;select IRP bank0
  1198     0293  0800               	movf	0,w
  1199     0294  00B3               	movwf	sprintf@val
  1200     0295  0A84               	incf	4,f
  1201     0296  0800               	movf	0,w
  1202     0297  00B4               	movwf	sprintf@val+1
  1203     0298                     l1137:
  1204     0298  3002               	movlw	2
  1205     0299  00AC               	movwf	??_sprintf
  1206     029A  082C               	movf	??_sprintf,w
  1207     029B  07B0               	addwf	sprintf@ap,f
  1208     029C                     l1139:
  1209                           
  1210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1211     029C  1FB4               	btfss	sprintf@val+1,7
  1212     029D  2A9F               	goto	u481
  1213     029E  2AA0               	goto	u480
  1214     029F                     u481:
  1215     029F  2AA9               	goto	l1145
  1216     02A0                     u480:
  1217     02A0                     l1141:
  1218                           
  1219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1220     02A0  3003               	movlw	3
  1221     02A1  00AC               	movwf	??_sprintf
  1222     02A2  082C               	movf	??_sprintf,w
  1223     02A3  04B1               	iorwf	sprintf@flag,f
  1224     02A4                     l1143:
  1225                           
  1226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1227     02A4  09B3               	comf	sprintf@val,f
  1228     02A5  09B4               	comf	sprintf@val+1,f
  1229     02A6  0AB3               	incf	sprintf@val,f
  1230     02A7  1903               	skipnz
  1231     02A8  0AB4               	incf	sprintf@val+1,f
  1232     02A9                     l1145:
  1233                           
  1234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1235     02A9  01B6               	clrf	sprintf@c
  1236     02AA  0AB6               	incf	sprintf@c,f
  1237     02AB                     l1151:
  1238                           
  1239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1240     02AB  0836               	movf	sprintf@c,w
  1241     02AC  00AC               	movwf	??_sprintf
  1242     02AD  072C               	addwf	??_sprintf,w
  1243     02AE  3E12               	addlw	low (_dpowers| (0+32768))
  1244     02AF  0084               	movwf	4
  1245     02B0  3081               	movlw	high (_dpowers| (0+32768))
  1246     02B1  1803               	skipnc
  1247     02B2  3E01               	addlw	1
  1248     02B3  00FF               	movwf	btemp+1
  1249     02B4  120A  118A  2100  120A  118A  	fcall	stringtab
  1250     02B9  00AD               	movwf	??_sprintf+1
  1251     02BA  120A  118A  2100  120A  118A  	fcall	stringtab
  1252     02BF  00AE               	movwf	??_sprintf+2
  1253     02C0  082E               	movf	??_sprintf+2,w
  1254     02C1  0234               	subwf	sprintf@val+1,w
  1255     02C2  1D03               	skipz
  1256     02C3  2AC6               	goto	u495
  1257     02C4  082D               	movf	??_sprintf+1,w
  1258     02C5  0233               	subwf	sprintf@val,w
  1259     02C6                     u495:
  1260     02C6  1803               	skipnc
  1261     02C7  2AC9               	goto	u491
  1262     02C8  2ACA               	goto	u490
  1263     02C9                     u491:
  1264     02C9  2ACB               	goto	l1155
  1265     02CA                     u490:
  1266     02CA  2AD5               	goto	l1157
  1267     02CB                     l1155:
  1268     02CB  3001               	movlw	1
  1269     02CC  00AC               	movwf	??_sprintf
  1270     02CD  082C               	movf	??_sprintf,w
  1271     02CE  07B6               	addwf	sprintf@c,f
  1272     02CF  3005               	movlw	5
  1273     02D0  0636               	xorwf	sprintf@c,w
  1274     02D1  1D03               	btfss	3,2
  1275     02D2  2AD4               	goto	u501
  1276     02D3  2AD5               	goto	u500
  1277     02D4                     u501:
  1278     02D4  2AAB               	goto	l1151
  1279     02D5                     u500:
  1280     02D5                     l1157:
  1281                           
  1282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1283     02D5  0831               	movf	sprintf@flag,w
  1284     02D6  3903               	andlw	3
  1285     02D7  1903               	btfsc	3,2
  1286     02D8  2ADA               	goto	u511
  1287     02D9  2ADB               	goto	u510
  1288     02DA                     u511:
  1289     02DA  2AE4               	goto	l1163
  1290     02DB                     u510:
  1291     02DB                     l1159:
  1292                           
  1293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1294     02DB  0835               	movf	sprintf@sp,w
  1295     02DC  0084               	movwf	4
  1296     02DD  302D               	movlw	45
  1297     02DE  1383               	bcf	3,7	;select IRP bank0
  1298     02DF  0080               	movwf	0
  1299     02E0                     l1161:
  1300     02E0  3001               	movlw	1
  1301     02E1  00AC               	movwf	??_sprintf
  1302     02E2  082C               	movf	??_sprintf,w
  1303     02E3  07B5               	addwf	sprintf@sp,f
  1304     02E4                     l1163:
  1305                           
  1306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1307     02E4  0836               	movf	sprintf@c,w
  1308     02E5  00B2               	movwf	sprintf@prec
  1309                           
  1310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1311     02E6  2B22               	goto	l1171
  1312     02E7                     l1165:
  1313                           
  1314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1315     02E7  300A               	movlw	10
  1316     02E8  00A3               	movwf	___lwmod@divisor
  1317     02E9  3000               	movlw	0
  1318     02EA  00A4               	movwf	___lwmod@divisor+1
  1319     02EB  0832               	movf	sprintf@prec,w
  1320     02EC  00AC               	movwf	??_sprintf
  1321     02ED  072C               	addwf	??_sprintf,w
  1322     02EE  3E12               	addlw	low (_dpowers| (0+32768))
  1323     02EF  0084               	movwf	4
  1324     02F0  3081               	movlw	high (_dpowers| (0+32768))
  1325     02F1  1803               	skipnc
  1326     02F2  3E01               	addlw	1
  1327     02F3  00FF               	movwf	btemp+1
  1328     02F4  120A  118A  2100  120A  118A  	fcall	stringtab
  1329     02F9  00F4               	movwf	___lwdiv@divisor
  1330     02FA  120A  118A  2100  120A  118A  	fcall	stringtab
  1331     02FF  00F5               	movwf	___lwdiv@divisor+1
  1332     0300  0834               	movf	sprintf@val+1,w
  1333     0301  00F7               	movwf	___lwdiv@dividend+1
  1334     0302  0833               	movf	sprintf@val,w
  1335     0303  00F6               	movwf	___lwdiv@dividend
  1336     0304  120A  118A  24BD  120A  118A  	fcall	___lwdiv
  1337     0309  0875               	movf	?___lwdiv+1,w
  1338     030A  1283               	bcf	3,5	;RP0=0, select bank0
  1339     030B  1303               	bcf	3,6	;RP1=0, select bank0
  1340     030C  00A6               	movwf	___lwmod@dividend+1
  1341     030D  0874               	movf	?___lwdiv,w
  1342     030E  00A5               	movwf	___lwmod@dividend
  1343     030F  120A  118A  2503  120A  118A  	fcall	___lwmod
  1344     0314  1283               	bcf	3,5	;RP0=0, select bank0
  1345     0315  1303               	bcf	3,6	;RP1=0, select bank0
  1346     0316  0823               	movf	?___lwmod,w
  1347     0317  3E30               	addlw	48
  1348     0318  00B6               	movwf	sprintf@c
  1349     0319                     l1167:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1352     0319  0835               	movf	sprintf@sp,w
  1353     031A  0084               	movwf	4
  1354     031B  0836               	movf	sprintf@c,w
  1355     031C  1383               	bcf	3,7	;select IRP bank0
  1356     031D  0080               	movwf	0
  1357     031E                     l1169:
  1358     031E  3001               	movlw	1
  1359     031F  00AC               	movwf	??_sprintf
  1360     0320  082C               	movf	??_sprintf,w
  1361     0321  07B5               	addwf	sprintf@sp,f
  1362     0322                     l1171:
  1363                           
  1364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1365     0322  30FF               	movlw	255
  1366     0323  00AC               	movwf	??_sprintf
  1367     0324  082C               	movf	??_sprintf,w
  1368     0325  07B2               	addwf	sprintf@prec,f
  1369     0326  0A32               	incf	sprintf@prec,w
  1370     0327  1D03               	btfss	3,2
  1371     0328  2B2A               	goto	u521
  1372     0329  2B2B               	goto	u520
  1373     032A                     u521:
  1374     032A  2AE7               	goto	l1165
  1375     032B                     u520:
  1376     032B                     l1173:
  1377                           
  1378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1379     032B  0829               	movf	sprintf@f+1,w
  1380     032C  00AD               	movwf	??_sprintf+1
  1381     032D  0828               	movf	sprintf@f,w
  1382     032E  00AC               	movwf	??_sprintf
  1383     032F  0AA8               	incf	sprintf@f,f
  1384     0330  1903               	skipnz
  1385     0331  0AA9               	incf	sprintf@f+1,f
  1386     0332  082D               	movf	??_sprintf+1,w
  1387     0333  00FF               	movwf	btemp+1
  1388     0334  082C               	movf	??_sprintf,w
  1389     0335  0084               	movwf	4
  1390     0336  120A  118A  2100  120A  118A  	fcall	stringtab
  1391     033B  00B6               	movwf	sprintf@c
  1392     033C  0836               	movf	sprintf@c,w
  1393     033D  1D03               	btfss	3,2
  1394     033E  2B40               	goto	u531
  1395     033F  2B41               	goto	u530
  1396     0340                     u531:
  1397     0340  2A5C               	goto	l1123
  1398     0341                     u530:
  1399     0341                     l1175:
  1400                           
  1401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1402     0341  0835               	movf	sprintf@sp,w
  1403     0342  0084               	movwf	4
  1404     0343  1383               	bcf	3,7	;select IRP bank0
  1405     0344  0180               	clrf	0
  1406     0345                     l223:
  1407     0345  0008               	return
  1408     0346                     __end_of_sprintf:
  1409                           
  1410                           	psect	text2
  1411     0503                     __ptext2:	
  1412 ;; *************** function ___lwmod *****************
  1413 ;; Defined at:
  1414 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  divisor         2    3[BANK0 ] unsigned int 
  1417 ;;  dividend        2    5[BANK0 ] unsigned int 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  counter         1    7[BANK0 ] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  2    3[BANK0 ] unsigned int 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         0       4       0       0       0
  1430 ;;      Locals:         0       1       0       0       0
  1431 ;;      Temps:          1       0       0       0       0
  1432 ;;      Totals:         1       5       0       0       0
  1433 ;;Total ram usage:        6 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 1
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_sprintf
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443     0503                     ___lwmod:	
  1444                           ;psect for function ___lwmod
  1445                           
  1446     0503                     l1029:	
  1447                           ;incstack = 0
  1448                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1449                           
  1450     0503  1283               	bcf	3,5	;RP0=0, select bank0
  1451     0504  1303               	bcf	3,6	;RP1=0, select bank0
  1452     0505  0823               	movf	___lwmod@divisor,w
  1453     0506  0424               	iorwf	___lwmod@divisor+1,w
  1454     0507  1903               	btfsc	3,2
  1455     0508  2D0A               	goto	u381
  1456     0509  2D0B               	goto	u380
  1457     050A                     u381:
  1458     050A  2D3A               	goto	l1047
  1459     050B                     u380:
  1460     050B                     l1031:
  1461     050B  01A7               	clrf	___lwmod@counter
  1462     050C  0AA7               	incf	___lwmod@counter,f
  1463     050D  2D19               	goto	l1037
  1464     050E                     l1033:
  1465     050E  3001               	movlw	1
  1466     050F                     u395:
  1467     050F  1003               	clrc
  1468     0510  0DA3               	rlf	___lwmod@divisor,f
  1469     0511  0DA4               	rlf	___lwmod@divisor+1,f
  1470     0512  3EFF               	addlw	-1
  1471     0513  1D03               	skipz
  1472     0514  2D0F               	goto	u395
  1473     0515                     l1035:
  1474     0515  3001               	movlw	1
  1475     0516  00F9               	movwf	??___lwmod
  1476     0517  0879               	movf	??___lwmod,w
  1477     0518  07A7               	addwf	___lwmod@counter,f
  1478     0519                     l1037:
  1479     0519  1FA4               	btfss	___lwmod@divisor+1,7
  1480     051A  2D1C               	goto	u401
  1481     051B  2D1D               	goto	u400
  1482     051C                     u401:
  1483     051C  2D0E               	goto	l1033
  1484     051D                     u400:
  1485     051D                     l1039:
  1486     051D  0824               	movf	___lwmod@divisor+1,w
  1487     051E  0226               	subwf	___lwmod@dividend+1,w
  1488     051F  1D03               	skipz
  1489     0520  2D23               	goto	u415
  1490     0521  0823               	movf	___lwmod@divisor,w
  1491     0522  0225               	subwf	___lwmod@dividend,w
  1492     0523                     u415:
  1493     0523  1C03               	skipc
  1494     0524  2D26               	goto	u411
  1495     0525  2D27               	goto	u410
  1496     0526                     u411:
  1497     0526  2D2D               	goto	l1043
  1498     0527                     u410:
  1499     0527                     l1041:
  1500     0527  0823               	movf	___lwmod@divisor,w
  1501     0528  02A5               	subwf	___lwmod@dividend,f
  1502     0529  0824               	movf	___lwmod@divisor+1,w
  1503     052A  1C03               	skipc
  1504     052B  03A6               	decf	___lwmod@dividend+1,f
  1505     052C  02A6               	subwf	___lwmod@dividend+1,f
  1506     052D                     l1043:
  1507     052D  3001               	movlw	1
  1508     052E                     u425:
  1509     052E  1003               	clrc
  1510     052F  0CA4               	rrf	___lwmod@divisor+1,f
  1511     0530  0CA3               	rrf	___lwmod@divisor,f
  1512     0531  3EFF               	addlw	-1
  1513     0532  1D03               	skipz
  1514     0533  2D2E               	goto	u425
  1515     0534                     l1045:
  1516     0534  3001               	movlw	1
  1517     0535  02A7               	subwf	___lwmod@counter,f
  1518     0536  1D03               	btfss	3,2
  1519     0537  2D39               	goto	u431
  1520     0538  2D3A               	goto	u430
  1521     0539                     u431:
  1522     0539  2D1D               	goto	l1039
  1523     053A                     u430:
  1524     053A                     l1047:
  1525     053A  0826               	movf	___lwmod@dividend+1,w
  1526     053B  00A4               	movwf	?___lwmod+1
  1527     053C  0825               	movf	___lwmod@dividend,w
  1528     053D  00A3               	movwf	?___lwmod
  1529     053E                     l509:
  1530     053E  0008               	return
  1531     053F                     __end_of___lwmod:
  1532                           
  1533                           	psect	text3
  1534     04BD                     __ptext3:	
  1535 ;; *************** function ___lwdiv *****************
  1536 ;; Defined at:
  1537 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  divisor         2    4[COMMON] unsigned int 
  1540 ;;  dividend        2    6[COMMON] unsigned int 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  quotient        2    0[BANK0 ] unsigned int 
  1543 ;;  counter         1    2[BANK0 ] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  2    4[COMMON] unsigned int 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         4       0       0       0       0
  1554 ;;      Locals:         0       3       0       0       0
  1555 ;;      Temps:          1       0       0       0       0
  1556 ;;      Totals:         5       3       0       0       0
  1557 ;;Total ram usage:        8 bytes
  1558 ;; Hardware stack levels used: 1
  1559 ;; Hardware stack levels required when called: 1
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_sprintf
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567     04BD                     ___lwdiv:	
  1568                           ;psect for function ___lwdiv
  1569                           
  1570     04BD                     l1003:	
  1571                           ;incstack = 0
  1572                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1573                           
  1574     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1575     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1576     04BF  01A0               	clrf	___lwdiv@quotient
  1577     04C0  01A1               	clrf	___lwdiv@quotient+1
  1578     04C1                     l1005:
  1579     04C1  0874               	movf	___lwdiv@divisor,w
  1580     04C2  0475               	iorwf	___lwdiv@divisor+1,w
  1581     04C3  1903               	btfsc	3,2
  1582     04C4  2CC6               	goto	u311
  1583     04C5  2CC7               	goto	u310
  1584     04C6                     u311:
  1585     04C6  2CFE               	goto	l1025
  1586     04C7                     u310:
  1587     04C7                     l1007:
  1588     04C7  01A2               	clrf	___lwdiv@counter
  1589     04C8  0AA2               	incf	___lwdiv@counter,f
  1590     04C9  2CD5               	goto	l1013
  1591     04CA                     l1009:
  1592     04CA  3001               	movlw	1
  1593     04CB                     u325:
  1594     04CB  1003               	clrc
  1595     04CC  0DF4               	rlf	___lwdiv@divisor,f
  1596     04CD  0DF5               	rlf	___lwdiv@divisor+1,f
  1597     04CE  3EFF               	addlw	-1
  1598     04CF  1D03               	skipz
  1599     04D0  2CCB               	goto	u325
  1600     04D1                     l1011:
  1601     04D1  3001               	movlw	1
  1602     04D2  00F8               	movwf	??___lwdiv
  1603     04D3  0878               	movf	??___lwdiv,w
  1604     04D4  07A2               	addwf	___lwdiv@counter,f
  1605     04D5                     l1013:
  1606     04D5  1FF5               	btfss	___lwdiv@divisor+1,7
  1607     04D6  2CD8               	goto	u331
  1608     04D7  2CD9               	goto	u330
  1609     04D8                     u331:
  1610     04D8  2CCA               	goto	l1009
  1611     04D9                     u330:
  1612     04D9                     l1015:
  1613     04D9  3001               	movlw	1
  1614     04DA                     u345:
  1615     04DA  1003               	clrc
  1616     04DB  0DA0               	rlf	___lwdiv@quotient,f
  1617     04DC  0DA1               	rlf	___lwdiv@quotient+1,f
  1618     04DD  3EFF               	addlw	-1
  1619     04DE  1D03               	skipz
  1620     04DF  2CDA               	goto	u345
  1621     04E0  0875               	movf	___lwdiv@divisor+1,w
  1622     04E1  0277               	subwf	___lwdiv@dividend+1,w
  1623     04E2  1D03               	skipz
  1624     04E3  2CE6               	goto	u355
  1625     04E4  0874               	movf	___lwdiv@divisor,w
  1626     04E5  0276               	subwf	___lwdiv@dividend,w
  1627     04E6                     u355:
  1628     04E6  1C03               	skipc
  1629     04E7  2CE9               	goto	u351
  1630     04E8  2CEA               	goto	u350
  1631     04E9                     u351:
  1632     04E9  2CF1               	goto	l1021
  1633     04EA                     u350:
  1634     04EA                     l1017:
  1635     04EA  0874               	movf	___lwdiv@divisor,w
  1636     04EB  02F6               	subwf	___lwdiv@dividend,f
  1637     04EC  0875               	movf	___lwdiv@divisor+1,w
  1638     04ED  1C03               	skipc
  1639     04EE  03F7               	decf	___lwdiv@dividend+1,f
  1640     04EF  02F7               	subwf	___lwdiv@dividend+1,f
  1641     04F0                     l1019:
  1642     04F0  1420               	bsf	___lwdiv@quotient,0
  1643     04F1                     l1021:
  1644     04F1  3001               	movlw	1
  1645     04F2                     u365:
  1646     04F2  1003               	clrc
  1647     04F3  0CF5               	rrf	___lwdiv@divisor+1,f
  1648     04F4  0CF4               	rrf	___lwdiv@divisor,f
  1649     04F5  3EFF               	addlw	-1
  1650     04F6  1D03               	skipz
  1651     04F7  2CF2               	goto	u365
  1652     04F8                     l1023:
  1653     04F8  3001               	movlw	1
  1654     04F9  02A2               	subwf	___lwdiv@counter,f
  1655     04FA  1D03               	btfss	3,2
  1656     04FB  2CFD               	goto	u371
  1657     04FC  2CFE               	goto	u370
  1658     04FD                     u371:
  1659     04FD  2CD9               	goto	l1015
  1660     04FE                     u370:
  1661     04FE                     l1025:
  1662     04FE  0821               	movf	___lwdiv@quotient+1,w
  1663     04FF  00F5               	movwf	?___lwdiv+1
  1664     0500  0820               	movf	___lwdiv@quotient,w
  1665     0501  00F4               	movwf	?___lwdiv
  1666     0502                     l499:
  1667     0502  0008               	return
  1668     0503                     __end_of___lwdiv:
  1669                           
  1670                           	psect	text4
  1671     0475                     __ptext4:	
  1672 ;; *************** function _setup *****************
  1673 ;; Defined at:
  1674 ;;		line 108 in file "mainPostLab8.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         0       0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0
  1690 ;;      Temps:          1       0       0       0       0
  1691 ;;      Totals:         1       0       0       0       0
  1692 ;;Total ram usage:        1 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; Hardware stack levels required when called: 1
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702     0475                     _setup:	
  1703                           ;psect for function _setup
  1704                           
  1705     0475                     l1051:	
  1706                           ;incstack = 0
  1707                           ; Regs used in _setup: [wreg+status,2+status,0]
  1708                           
  1709                           
  1710                           ;mainPostLab8.c: 111:     ANSEL = 0;
  1711     0475  1683               	bsf	3,5	;RP0=1, select bank3
  1712     0476  1703               	bsf	3,6	;RP1=1, select bank3
  1713     0477  0188               	clrf	8	;volatile
  1714                           
  1715                           ;mainPostLab8.c: 112:     ANSELH = 0;
  1716     0478  0189               	clrf	9	;volatile
  1717                           
  1718                           ;mainPostLab8.c: 114:     TRISB = 0;
  1719     0479  1683               	bsf	3,5	;RP0=1, select bank1
  1720     047A  1303               	bcf	3,6	;RP1=0, select bank1
  1721     047B  0186               	clrf	6	;volatile
  1722                           
  1723                           ;mainPostLab8.c: 115:     TRISD = 0;
  1724     047C  0188               	clrf	8	;volatile
  1725                           
  1726                           ;mainPostLab8.c: 116:     PORTD = 0x00;
  1727     047D  1283               	bcf	3,5	;RP0=0, select bank0
  1728     047E  1303               	bcf	3,6	;RP1=0, select bank0
  1729     047F  0188               	clrf	8	;volatile
  1730     0480                     l1053:
  1731                           
  1732                           ;mainPostLab8.c: 119:     OSCCONbits.IRCF = 0b100;
  1733     0480  1683               	bsf	3,5	;RP0=1, select bank1
  1734     0481  1303               	bcf	3,6	;RP1=0, select bank1
  1735     0482  080F               	movf	15,w	;volatile
  1736     0483  398F               	andlw	-113
  1737     0484  3840               	iorlw	64
  1738     0485  008F               	movwf	15	;volatile
  1739     0486                     l1055:
  1740                           
  1741                           ;mainPostLab8.c: 120:     OSCCONbits.SCS = 1;
  1742     0486  140F               	bsf	15,0	;volatile
  1743     0487                     l1057:
  1744                           
  1745                           ;mainPostLab8.c: 123:     TXSTAbits.SYNC = 0;
  1746     0487  1218               	bcf	24,4	;volatile
  1747     0488                     l1059:
  1748                           
  1749                           ;mainPostLab8.c: 124:     TXSTAbits.BRGH = 1;
  1750     0488  1518               	bsf	24,2	;volatile
  1751     0489                     l1061:
  1752                           
  1753                           ;mainPostLab8.c: 126:     BAUDCTLbits.BRG16 = 1;
  1754     0489  1683               	bsf	3,5	;RP0=1, select bank3
  1755     048A  1703               	bsf	3,6	;RP1=1, select bank3
  1756     048B  1587               	bsf	7,3	;volatile
  1757     048C                     l1063:
  1758                           
  1759                           ;mainPostLab8.c: 128:     SPBRG = 25;
  1760     048C  3019               	movlw	25
  1761     048D  1683               	bsf	3,5	;RP0=1, select bank1
  1762     048E  1303               	bcf	3,6	;RP1=0, select bank1
  1763     048F  0099               	movwf	25	;volatile
  1764     0490                     l1065:
  1765                           
  1766                           ;mainPostLab8.c: 129:     SPBRGH = 0;
  1767     0490  019A               	clrf	26	;volatile
  1768     0491                     l1067:
  1769                           
  1770                           ;mainPostLab8.c: 131:     RCSTAbits.SPEN = 1;
  1771     0491  1283               	bcf	3,5	;RP0=0, select bank0
  1772     0492  1303               	bcf	3,6	;RP1=0, select bank0
  1773     0493  1798               	bsf	24,7	;volatile
  1774     0494                     l1069:
  1775                           
  1776                           ;mainPostLab8.c: 132:     RCSTAbits.RX9 = 0;
  1777     0494  1318               	bcf	24,6	;volatile
  1778     0495                     l1071:
  1779                           
  1780                           ;mainPostLab8.c: 133:     RCSTAbits.CREN = 1;
  1781     0495  1618               	bsf	24,4	;volatile
  1782     0496                     l1073:
  1783                           
  1784                           ;mainPostLab8.c: 135:     TXSTAbits.TXEN = 1;
  1785     0496  1683               	bsf	3,5	;RP0=1, select bank1
  1786     0497  1303               	bcf	3,6	;RP1=0, select bank1
  1787     0498  1698               	bsf	24,5	;volatile
  1788     0499                     l1075:
  1789                           
  1790                           ;mainPostLab8.c: 140:     PIR1bits.RCIF = 0;
  1791     0499  1283               	bcf	3,5	;RP0=0, select bank0
  1792     049A  1303               	bcf	3,6	;RP1=0, select bank0
  1793     049B  128C               	bcf	12,5	;volatile
  1794     049C                     l1077:
  1795                           
  1796                           ;mainPostLab8.c: 141:     PIE1bits.RCIE = 1;
  1797     049C  1683               	bsf	3,5	;RP0=1, select bank1
  1798     049D  1303               	bcf	3,6	;RP1=0, select bank1
  1799     049E  168C               	bsf	12,5	;volatile
  1800     049F                     l1079:
  1801                           
  1802                           ;mainPostLab8.c: 142:     INTCONbits.PEIE = 1;
  1803     049F  170B               	bsf	11,6	;volatile
  1804     04A0                     l1081:
  1805                           
  1806                           ;mainPostLab8.c: 143:     INTCONbits.GIE = 1;
  1807     04A0  178B               	bsf	11,7	;volatile
  1808     04A1                     l1083:
  1809                           
  1810                           ;mainPostLab8.c: 146:     ANSELbits.ANS0 = 1;
  1811     04A1  1683               	bsf	3,5	;RP0=1, select bank3
  1812     04A2  1703               	bsf	3,6	;RP1=1, select bank3
  1813     04A3  1408               	bsf	8,0	;volatile
  1814     04A4                     l1085:
  1815                           
  1816                           ;mainPostLab8.c: 147:     ANSELbits.ANS1 = 1;
  1817     04A4  1488               	bsf	8,1	;volatile
  1818     04A5                     l1087:
  1819                           
  1820                           ;mainPostLab8.c: 148:     TRISAbits.TRISA0 = 1;
  1821     04A5  1683               	bsf	3,5	;RP0=1, select bank1
  1822     04A6  1303               	bcf	3,6	;RP1=0, select bank1
  1823     04A7  1405               	bsf	5,0	;volatile
  1824     04A8                     l1089:
  1825                           
  1826                           ;mainPostLab8.c: 149:     TRISAbits.TRISA1 = 1;
  1827     04A8  1485               	bsf	5,1	;volatile
  1828     04A9                     l1091:
  1829                           
  1830                           ;mainPostLab8.c: 150:     ADCON0bits.ADCS = 0b10;
  1831     04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1832     04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1833     04AB  081F               	movf	31,w	;volatile
  1834     04AC  393F               	andlw	-193
  1835     04AD  3880               	iorlw	128
  1836     04AE  009F               	movwf	31	;volatile
  1837                           
  1838                           ;mainPostLab8.c: 151:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1839     04AF  3053               	movlw	83
  1840     04B0  00F4               	movwf	??_setup
  1841     04B1                     u607:
  1842     04B1  0BF4               	decfsz	??_setup,f
  1843     04B2  2CB1               	goto	u607
  1844     04B3                     l1093:
  1845                           
  1846                           ;mainPostLab8.c: 152:     ADCON1bits.ADFM = 0;
  1847     04B3  1683               	bsf	3,5	;RP0=1, select bank1
  1848     04B4  1303               	bcf	3,6	;RP1=0, select bank1
  1849     04B5  139F               	bcf	31,7	;volatile
  1850     04B6                     l1095:
  1851                           
  1852                           ;mainPostLab8.c: 153:     ADCON1bits.VCFG0 = 0;
  1853     04B6  121F               	bcf	31,4	;volatile
  1854     04B7                     l1097:
  1855                           
  1856                           ;mainPostLab8.c: 154:     ADCON1bits.VCFG1 = 0;
  1857     04B7  129F               	bcf	31,5	;volatile
  1858     04B8                     l1099:
  1859                           
  1860                           ;mainPostLab8.c: 155:     ADCON0bits.ADON = 1;
  1861     04B8  1283               	bcf	3,5	;RP0=0, select bank0
  1862     04B9  1303               	bcf	3,6	;RP1=0, select bank0
  1863     04BA  141F               	bsf	31,0	;volatile
  1864     04BB                     l1101:
  1865                           
  1866                           ;mainPostLab8.c: 156:     ADIF = 0;
  1867     04BB  130C               	bcf	12,6	;volatile
  1868     04BC                     l106:
  1869     04BC  0008               	return
  1870     04BD                     __end_of_setup:
  1871                           
  1872                           	psect	text5
  1873     0419                     __ptext5:	
  1874 ;; *************** function _print_string *****************
  1875 ;; Defined at:
  1876 ;;		line 164 in file "mainPostLab8.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  cadena          2    8[COMMON] PTR unsigned char 
  1879 ;;		 -> data5(48), data(14), num2(5), data7(3), 
  1880 ;;		 -> data6(32), pot(1), num1(5), data4(23), 
  1881 ;;		 -> data3(19), data2(28), data1(66), menu(68), 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  i               2    5[BANK0 ] int 
  1884 ;;  largo           2    3[BANK0 ] int 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         2       0       0       0       0
  1895 ;;      Locals:         0       4       0       0       0
  1896 ;;      Temps:          0       3       0       0       0
  1897 ;;      Totals:         2       7       0       0       0
  1898 ;;Total ram usage:        9 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 3
  1901 ;; This function calls:
  1902 ;;		_strlen
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908     0419                     _print_string:	
  1909                           ;psect for function _print_string
  1910                           
  1911     0419                     l1105:	
  1912                           ;incstack = 0
  1913                           ; Regs used in _print_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1914                           
  1915                           
  1916                           ;mainPostLab8.c: 165:     int largo = strlen(cadena);
  1917     0419  0878               	movf	print_string@cadena,w
  1918     041A  00F4               	movwf	strlen@s
  1919     041B  0879               	movf	print_string@cadena+1,w
  1920     041C  00F5               	movwf	strlen@s+1
  1921     041D  120A  118A  253F  120A  118A  	fcall	_strlen
  1922     0422  0875               	movf	?_strlen+1,w
  1923     0423  1283               	bcf	3,5	;RP0=0, select bank0
  1924     0424  1303               	bcf	3,6	;RP1=0, select bank0
  1925     0425  00A4               	movwf	print_string@largo+1
  1926     0426  0874               	movf	?_strlen,w
  1927     0427  00A3               	movwf	print_string@largo
  1928     0428                     l1107:
  1929                           
  1930                           ;mainPostLab8.c: 166:     int i;;mainPostLab8.c: 167:     _delay((unsigned long)((100)*(
      +                          1000000/4000.0)));
  1931     0428  3021               	movlw	33
  1932     0429  1283               	bcf	3,5	;RP0=0, select bank0
  1933     042A  1303               	bcf	3,6	;RP1=0, select bank0
  1934     042B  00A1               	movwf	??_print_string+1
  1935     042C  3075               	movlw	117
  1936     042D  00A0               	movwf	??_print_string
  1937     042E                     u617:
  1938     042E  0BA0               	decfsz	??_print_string,f
  1939     042F  2C2E               	goto	u617
  1940     0430  0BA1               	decfsz	??_print_string+1,f
  1941     0431  2C2E               	goto	u617
  1942     0432  2C33               	nop2
  1943     0433                     l1109:
  1944                           
  1945                           ;mainPostLab8.c: 169:     for (i=0; i < largo; i++){
  1946     0433  1283               	bcf	3,5	;RP0=0, select bank0
  1947     0434  1303               	bcf	3,6	;RP1=0, select bank0
  1948     0435  01A5               	clrf	print_string@i
  1949     0436  01A6               	clrf	print_string@i+1
  1950     0437  2C66               	goto	l1119
  1951     0438                     l1111:
  1952                           
  1953                           ;mainPostLab8.c: 170:         _delay((unsigned long)((10)*(1000000/4000.0)));
  1954     0438  3004               	movlw	4
  1955     0439  1283               	bcf	3,5	;RP0=0, select bank0
  1956     043A  1303               	bcf	3,6	;RP1=0, select bank0
  1957     043B  00A1               	movwf	??_print_string+1
  1958     043C  303D               	movlw	61
  1959     043D  00A0               	movwf	??_print_string
  1960     043E                     u627:
  1961     043E  0BA0               	decfsz	??_print_string,f
  1962     043F  2C3E               	goto	u627
  1963     0440  0BA1               	decfsz	??_print_string+1,f
  1964     0441  2C3E               	goto	u627
  1965     0442                     l1113:
  1966                           
  1967                           ;mainPostLab8.c: 171:         if (PIR1bits.TXIF)
  1968     0442  1283               	bcf	3,5	;RP0=0, select bank0
  1969     0443  1303               	bcf	3,6	;RP1=0, select bank0
  1970     0444  1E0C               	btfss	12,4	;volatile
  1971     0445  2C47               	goto	u441
  1972     0446  2C48               	goto	u440
  1973     0447                     u441:
  1974     0447  2C60               	goto	l1117
  1975     0448                     u440:
  1976     0448                     l1115:
  1977                           
  1978                           ;mainPostLab8.c: 172:         {;mainPostLab8.c: 173:             TXREG = cadena[i];
  1979     0448  0825               	movf	print_string@i,w
  1980     0449  0778               	addwf	print_string@cadena,w
  1981     044A  00A1               	movwf	??_print_string+1
  1982     044B  0879               	movf	print_string@cadena+1,w
  1983     044C  00A0               	movwf	??_print_string
  1984     044D  1803               	skipnc
  1985     044E  0AA0               	incf	??_print_string,f
  1986     044F  1FA5               	btfss	print_string@i,7
  1987     0450  2C52               	goto	u450
  1988     0451  03A0               	decf	??_print_string,f
  1989     0452                     u450:
  1990     0452  1283               	bcf	3,5	;RP0=0, select bank0
  1991     0453  1303               	bcf	3,6	;RP1=0, select bank0
  1992     0454  0820               	movf	??_print_string,w
  1993     0455  00A2               	movwf	??_print_string+2
  1994     0456  0822               	movf	??_print_string+2,w
  1995     0457  00FF               	movwf	btemp+1
  1996     0458  0821               	movf	??_print_string+1,w
  1997     0459  0084               	movwf	4
  1998     045A  120A  118A  2100  120A  118A  	fcall	stringtab
  1999     045F  0099               	movwf	25	;volatile
  2000     0460                     l1117:
  2001                           
  2002                           ;mainPostLab8.c: 175:     }
  2003     0460  3001               	movlw	1
  2004     0461  07A5               	addwf	print_string@i,f
  2005     0462  1803               	skipnc
  2006     0463  0AA6               	incf	print_string@i+1,f
  2007     0464  3000               	movlw	0
  2008     0465  07A6               	addwf	print_string@i+1,f
  2009     0466                     l1119:
  2010     0466  0826               	movf	print_string@i+1,w
  2011     0467  3A80               	xorlw	128
  2012     0468  00A0               	movwf	??_print_string
  2013     0469  0824               	movf	print_string@largo+1,w
  2014     046A  3A80               	xorlw	128
  2015     046B  0220               	subwf	??_print_string,w
  2016     046C  1D03               	skipz
  2017     046D  2C70               	goto	u465
  2018     046E  0823               	movf	print_string@largo,w
  2019     046F  0225               	subwf	print_string@i,w
  2020     0470                     u465:
  2021     0470  1C03               	skipc
  2022     0471  2C73               	goto	u461
  2023     0472  2C74               	goto	u460
  2024     0473                     u461:
  2025     0473  2C38               	goto	l1111
  2026     0474                     u460:
  2027     0474                     l113:
  2028     0474  0008               	return
  2029     0475                     __end_of_print_string:
  2030                           
  2031                           	psect	text6
  2032     053F                     __ptext6:	
  2033 ;; *************** function _strlen *****************
  2034 ;; Defined at:
  2035 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  s               2    4[COMMON] PTR const unsigned char 
  2038 ;;		 -> data5(48), data(14), num2(5), data7(3), 
  2039 ;;		 -> data6(32), pot(1), num1(5), data4(23), 
  2040 ;;		 -> data3(19), data2(28), data1(66), menu(68), 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  cp              2    6[COMMON] PTR const unsigned char 
  2043 ;;		 -> data5(48), data(14), num2(5), data7(3), 
  2044 ;;		 -> data6(32), pot(1), num1(5), data4(23), 
  2045 ;;		 -> data3(19), data2(28), data1(66), menu(68), 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  2    4[COMMON] unsigned int 
  2048 ;; Registers used:
  2049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2055 ;;      Params:         2       0       0       0       0
  2056 ;;      Locals:         2       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0
  2058 ;;      Totals:         4       0       0       0       0
  2059 ;;Total ram usage:        4 bytes
  2060 ;; Hardware stack levels used: 2
  2061 ;; Hardware stack levels required when called: 1
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_print_string
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069     053F                     _strlen:	
  2070                           ;psect for function _strlen
  2071                           
  2072     053F                     l993:	
  2073                           ;incstack = 0
  2074                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2075                           
  2076     053F  0874               	movf	strlen@s,w
  2077     0540  00F6               	movwf	strlen@cp
  2078     0541  0875               	movf	strlen@s+1,w
  2079     0542  00F7               	movwf	strlen@cp+1
  2080     0543  2D4A               	goto	l997
  2081     0544                     l995:
  2082     0544  3001               	movlw	1
  2083     0545  07F6               	addwf	strlen@cp,f
  2084     0546  1803               	skipnc
  2085     0547  0AF7               	incf	strlen@cp+1,f
  2086     0548  3000               	movlw	0
  2087     0549  07F7               	addwf	strlen@cp+1,f
  2088     054A                     l997:
  2089     054A  0877               	movf	strlen@cp+1,w
  2090     054B  1283               	bcf	3,5	;RP0=0, select bank0
  2091     054C  1303               	bcf	3,6	;RP1=0, select bank0
  2092     054D  00FF               	movwf	btemp+1
  2093     054E  0876               	movf	strlen@cp,w
  2094     054F  0084               	movwf	4
  2095     0550  120A  118A  2100  120A  118A  	fcall	stringtab
  2096     0555  3A00               	xorlw	0
  2097     0556  1D03               	skipz
  2098     0557  2D59               	goto	u301
  2099     0558  2D5A               	goto	u300
  2100     0559                     u301:
  2101     0559  2D44               	goto	l995
  2102     055A                     u300:
  2103     055A                     l999:
  2104     055A  0874               	movf	strlen@s,w
  2105     055B  0276               	subwf	strlen@cp,w
  2106     055C  00F4               	movwf	?_strlen
  2107     055D  0875               	movf	strlen@s+1,w
  2108     055E  1C03               	skipc
  2109     055F  0A75               	incf	strlen@s+1,w
  2110     0560  0277               	subwf	strlen@cp+1,w
  2111     0561  00F5               	movwf	?_strlen+1
  2112     0562                     l681:
  2113     0562  0008               	return
  2114     0563                     __end_of_strlen:
  2115                           
  2116                           	psect	text7
  2117     0563                     __ptext7:	
  2118 ;; *************** function _isr *****************
  2119 ;; Defined at:
  2120 ;;		line 63 in file "mainPostLab8.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0
  2136 ;;      Temps:          4       0       0       0       0
  2137 ;;      Totals:         4       0       0       0       0
  2138 ;;Total ram usage:        4 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		Interrupt level 1
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147     0563                     _isr:	
  2148                           ;psect for function _isr
  2149                           
  2150     0563                     i1l1183:
  2151                           
  2152                           ;mainPostLab8.c: 65:     if(PIR1bits.RCIF)
  2153     0563  1283               	bcf	3,5	;RP0=0, select bank0
  2154     0564  1303               	bcf	3,6	;RP1=0, select bank0
  2155     0565  1E8C               	btfss	12,5	;volatile
  2156     0566  2D68               	goto	u54_21
  2157     0567  2D69               	goto	u54_20
  2158     0568                     u54_21:
  2159     0568  2D72               	goto	i1l88
  2160     0569                     u54_20:
  2161     0569                     i1l1185:
  2162                           
  2163                           ;mainPostLab8.c: 66:     {;mainPostLab8.c: 67:         PORTD = RCREG;
  2164     0569  081A               	movf	26,w	;volatile
  2165     056A  0088               	movwf	8	;volatile
  2166                           
  2167                           ;mainPostLab8.c: 68:         ans = PORTD;
  2168     056B  0808               	movf	8,w	;volatile
  2169     056C  00F0               	movwf	??_isr
  2170     056D  01F1               	clrf	??_isr+1
  2171     056E  0870               	movf	??_isr,w
  2172     056F  00BB               	movwf	_ans
  2173     0570  0871               	movf	??_isr+1,w
  2174     0571  00BC               	movwf	_ans+1
  2175     0572                     i1l88:
  2176     0572  0873               	movf	??_isr+3,w
  2177     0573  008A               	movwf	10
  2178     0574  0E72               	swapf	??_isr+2,w
  2179     0575  0083               	movwf	3
  2180     0576  0EFE               	swapf	btemp,f
  2181     0577  0E7E               	swapf	btemp,w
  2182     0578  0009               	retfie
  2183     0579                     __end_of_isr:
  2184     007E                     btemp	set	126	;btemp
  2185     007E                     wtemp0	set	126
  2186                           
  2187                           	psect	intentry
  2188     0004                     __pintentry:	
  2189                           ;incstack = 0
  2190                           ; Regs used in _isr: [wreg]
  2191                           
  2192     0004                     interrupt_function:
  2193     007E                     saved_w	set	btemp
  2194     0004  00FE               	movwf	btemp
  2195     0005  0E03               	swapf	3,w
  2196     0006  00F2               	movwf	??_isr+2
  2197     0007  080A               	movf	10,w
  2198     0008  00F3               	movwf	??_isr+3
  2199     0009  120A  118A  2D63   	ljmp	_isr
  2200                           
  2201                           	psect	idloc
  2202                           
  2203                           ;Config register IDLOC0 @ 0x2000
  2204                           ;	unspecified, using default values
  2205     2000                     	org	8192
  2206     2000  3FFF               	dw	16383
  2207                           
  2208                           ;Config register IDLOC1 @ 0x2001
  2209                           ;	unspecified, using default values
  2210     2001                     	org	8193
  2211     2001  3FFF               	dw	16383
  2212                           
  2213                           ;Config register IDLOC2 @ 0x2002
  2214                           ;	unspecified, using default values
  2215     2002                     	org	8194
  2216     2002  3FFF               	dw	16383
  2217                           
  2218                           ;Config register IDLOC3 @ 0x2003
  2219                           ;	unspecified, using default values
  2220     2003                     	org	8195
  2221     2003  3FFF               	dw	16383
  2222                           
  2223                           	psect	config
  2224                           
  2225                           ;Config register CONFIG1 @ 0x2007
  2226                           ;	Oscillator Selection bits
  2227                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2228                           ;	Watchdog Timer Enable bit
  2229                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2230                           ;	Power-up Timer Enable bit
  2231                           ;	PWRTE = OFF, PWRT disabled
  2232                           ;	RE3/MCLR pin function select bit
  2233                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2234                           ;	Code Protection bit
  2235                           ;	CP = OFF, Program memory code protection is disabled
  2236                           ;	Data Code Protection bit
  2237                           ;	CPD = OFF, Data memory code protection is disabled
  2238                           ;	Brown Out Reset Selection bits
  2239                           ;	BOREN = OFF, BOR disabled
  2240                           ;	Internal External Switchover bit
  2241                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2242                           ;	Fail-Safe Clock Monitor Enabled bit
  2243                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2244                           ;	Low Voltage Programming Enable bit
  2245                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2246                           ;	In-Circuit Debugger Mode bit
  2247                           ;	DEBUG = 0x1, unprogramme  2248     2007                     	org	8199
  2249     2007  20D4               	dw	8404
  2250                           
  2251                           ;Config register CONFIG2 @ 0x2008
  2252                           ;	Brown-out Reset Selection bit
  2253                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2254                           ;	Flash Program Memory Self Write Enable bits
  2255                           ;	WRT = OFF, Write protection off
  2256     2008                     	org	8200
  2257     2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    321
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     27      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 68
		 -> data5(CODE[48]), data(CODE[14]), num2(CODE[5]), data7(CODE[3]), 
		 -> data6(CODE[32]), pot(BANK0[1]), num1(CODE[5]), data4(CODE[23]), 
		 -> data3(CODE[19]), data2(CODE[28]), data1(CODE[66]), menu(CODE[68]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 68
		 -> data5(CODE[48]), data(CODE[14]), num2(CODE[5]), data7(CODE[3]), 
		 -> data6(CODE[32]), pot(BANK0[1]), num1(CODE[5]), data4(CODE[23]), 
		 -> data3(CODE[19]), data2(CODE[28]), data1(CODE[66]), menu(CODE[68]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> pot(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    print_string@cadena	PTR unsigned char  size(2) Largest target is 68
		 -> data5(CODE[48]), data(CODE[14]), num2(CODE[5]), data7(CODE[3]), 
		 -> data6(CODE[32]), pot(BANK0[1]), num1(CODE[5]), data4(CODE[23]), 
		 -> data3(CODE[19]), data2(CODE[28]), data1(CODE[66]), menu(CODE[68]), 


Critical Paths under _main in COMMON

    _main->_print_string
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _print_string->_strlen

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2675
                                             23 BANK0      4     4      0
                       _print_string
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    19      4    1211
                                              8 BANK0     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              9 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _print_string                                         9     7      2    1419
                                              8 COMMON     2     0      2
                                              0 BANK0      7     7      0
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                              4 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _print_string
     _strlen
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      28       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      1E       5       37.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      28      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Apr 18 12:32:21 2023

                      pc 0002                       l97 0395                       fsr 0004  
                    l103 0416                      l113 0474                      l106 04BC  
                    l223 0345                      l509 053E                      l681 0562  
                    l499 0502                      l993 053F                      l995 0544  
                    l997 054A                      l999 055A                      u300 055A  
                    u301 0559                      u310 04C7                      u311 04C6  
                    u400 051D                      u401 051C                      u330 04D9  
                    u410 0527                      u331 04D8                      u411 0526  
                    u500 02D5                      u325 04CB                      u501 02D4  
                    u350 04EA                      u430 053A                      u510 02DB  
                    u351 04E9                      u431 0539                      u415 0523  
                    u511 02DA                      u440 0448                      u520 032B  
                    u441 0447                      u345 04DA                      u425 052E  
                    u521 032A                      u450 0452                      u370 04FE  
                    u530 0341                      u371 04FD                      u355 04E6  
                    u531 0340                      u460 0474                      u380 050B  
                    u461 0473                      u365 04F2                      u381 050A  
                    u470 0262                      u550 0380                      u607 04B1  
                    u471 0261                      u551 037F                      u480 02A0  
                    u560 0387                      u465 0470                      u617 042E  
                    u481 029F                      u561 0386                      u490 02CA  
                    u570 0399                      u627 043E                      u395 050F  
                    u491 02C9                      u571 0398                      u580 03E8  
                    u581 03E7                      u495 02C6                      u597 03A8  
                    _ans 003B                      _isr 0563                      _pot 003D  
                    fsr0 0004                      indf 0000                     l1011 04D1  
                   l1003 04BD                     l1101 04BB                     l1021 04F1  
                   l1013 04D5                     l1005 04C1                     l1111 0438  
                   l1023 04F8                     l1015 04D9                     l1007 04C7  
                   l1031 050B                     l1113 0442                     l1105 0419  
                   l1017 04EA                     l1009 04CA                     l1025 04FE  
                   l1041 0527                     l1033 050E                     l1121 0259  
                   l1201 0380                     l1115 0448                     l1107 0428  
                   l1051 0475                     l1019 04F0                     l1043 052D  
                   l1035 0515                     l1123 025C                     l1211 03AC  
                   l1203 0387                     l1117 0460                     l1109 0433  
                   l1061 0489                     l1053 0480                     l1045 0534  
                   l1037 0519                     l1029 0503                     l1141 02A0  
                   l1133 026D                     l1125 0262                     l1213 03BC  
                   l1205 0390                     l1221 03E1                     l1119 0466  
                   l1071 0495                     l1063 048C                     l1055 0486  
                   l1039 051D                     l1047 053A                     l1151 02AB  
                   l1143 02A4                     l1135 0290                     l1127 0267  
                   l1223 03E8                     l1215 03C5                     l1207 0394  
                   l1081 04A0                     l1073 0496                     l1065 0490  
                   l1057 0487                     l1161 02E0                     l1145 02A9  
                   l1137 0298                     l1129 026C                     l1225 0404  
                   l1217 03CE                     l1209 0399                     l1091 04A9  
                   l1083 04A1                     l1075 0499                     l1067 0491  
                   l1059 0488                     l1171 0322                     l1163 02E4  
                   l1155 02CB                     l1139 029C                     l1219 03D7  
                   l1093 04B3                     l1085 04A4                     l1077 049C  
                   l1069 0494                     l1165 02E7                     l1157 02D5  
                   l1173 032B                     l1095 04B6                     l1087 04A5  
                   l1079 049F                     l1167 0319                     l1159 02DB  
                   l1175 0341                     l1247 0285                     l1191 0354  
                   l1097 04B7                     l1089 04A8                     l1169 031E  
                   l1193 035D                     l1099 04B8                     l1195 0366  
                   l1187 0346                     l1197 036F                     l1189 034B  
                   l1199 0378                     _ADIF 0066                     ?_isr 0070  
                   STR_1 0253                     i1l88 0572                     _data 0238  
                   _main 0346                     _menu 011C                     _num1 024B  
                   _num2 0246                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
        __end_of___lwdiv 0503          __end_of___lwmod 053F                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  u54_20 0569                    u54_21 0568                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019                    _data1 0160  
                  _data2 01F2                    _data3 0225                    _data4 020E  
                  _data5 01A2                    _data6 01D2                    _data7 0250  
        __end_of_dpowers 011C                    _setup 0475                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 0346  
        __initialization 000F             __end_of_data 0246             __end_of_main 0419  
           __end_of_menu 0160             __end_of_num1 0250             __end_of_num2 024B  
                 ??_main 0037            print_string@i 0025                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   i1l1183 0563  
                 i1l1185 0569                   _SPBRGH 009A                ??___lwdiv 0078  
              ??___lwmod 0079                   _strlen 053F                   saved_w 007E  
              ??_sprintf 002C  __end_of__initialization 0014           __pcstackCOMMON 0070  
          __end_of_data1 01A2            __end_of_data2 020E            __end_of_data3 0238  
          __end_of_data4 0225            __end_of_data5 01D2            __end_of_data6 01F2  
          __end_of_data7 0253            __end_of_setup 04BD                  ??_setup 0074  
             __pbssBANK0 003B               __pmaintext 0346               __pintentry 0004  
                ?_strlen 0074       print_string@cadena 0078               __stringtab 0100  
                ___lwdiv 04BD                  ___lwmod 0503                _ANSELbits 0188  
                __ptext1 0256                  __ptext2 0503                  __ptext3 04BD  
                __ptext4 0475                  __ptext5 0419                  __ptext6 053F  
                __ptext7 0563                  _dpowers 0112                  _sprintf 0256  
   end_of_initialization 0014                _RCSTAbits 0018             __pstringtext 0100  
                strlen@s 0074          main@adc_value_1 0039                _TRISAbits 0085  
          ?_print_string 0078                _TXSTAbits 0098              _BAUDCTLbits 0187  
         __end_of_strlen 0563      start_initialization 000F           ??_print_string 0020  
            __end_of_isr 0579                 ??_strlen 0076                ___latbits 0002  
          __pcstackBANK0 0020              sprintf@flag 0031              sprintf@prec 0032  
       ___lwdiv@dividend 0076                 ?___lwdiv 0074                 ?___lwmod 0023  
      print_string@largo 0023         ___lwdiv@quotient 0020                 ?_sprintf 0028  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
   __end_of_print_string 0475               _ADCON0bits 001F              __stringbase 0112  
             _ADCON1bits 009F       __end_of__stringtab 0112               sprintf@val 0033  
        ___lwdiv@divisor 0074          ___lwdiv@counter 0022               _INTCONbits 000B  
               intlevel1 0000                sprintf@ap 0030                sprintf@sp 0035  
       ___lwmod@dividend 0025                stringcode 010A               _OSCCONbits 008F  
               sprintf@c 0036                 sprintf@f 0028          ___lwmod@divisor 0023  
               strlen@cp 0076          ___lwmod@counter 0027                 stringtab 0100  
           _print_string 0419  
